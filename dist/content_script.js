!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=2)}([function(e,t,n){"use strict";n.d(t,"e",(function(){return r})),n.d(t,"c",(function(){return o})),n.d(t,"d",(function(){return i})),n.d(t,"b",(function(){return c})),n.d(t,"f",(function(){return s})),n.d(t,"a",(function(){return u}));const r="REGISTER_SHADER_MODULE",o="INIT_CONTENT_SCRIPT",i="INIT_EDITOR",c="EDITOR_CONNECTED",s="UPDATED_SHADER_MODULE",u="CLEAR_EDITOR"},function(e,t,n){"use strict";n.d(t,"b",(function(){return r})),n.d(t,"a",(function(){return o}));const r=()=>Math.random().toString(36).substring(2,15);function o(e){const t=[document.body,document.head,document.documentElement];for(let n=0;n<t.length;n++){const r=t[n];if(r){r.firstElementChild?r.insertBefore(e,r.firstElementChild):r.appendChild(e);break}}}},function(e,t,n){"use strict";n.r(t);var r=n(0),o=n(1);if(navigator.gpu){const e=chrome.runtime.connect({name:"content-script"});function i(e,t,n){window.postMessage(e)}e.onMessage.addListener(i),e.onDisconnect.addListener((function(){e.onMessage.removeListener(i)})),e.postMessage({type:r.c}),window.addEventListener("message",(function(t){const n=t.data;"object"==typeof n&&null!==n&&n.type==r.e&&e.postMessage(n)}));const t=document.createElement("script");t.type="text/javascript",t.text=`\n(function() {\n    const insertHeaderNode = ${o.a.toString()};\n\n    const injectedScript = document.createElement('script');\n    injectedScript.type = 'text/javascript';\n    injectedScript.src = '${chrome.extension.getURL("injected_script.js")}';\n    const scriptInjected = new Promise(resolve => {\n        injectedScript.onload = function() {\n            this.remove();\n            resolve();\n        };\n    });\n    insertHeaderNode(injectedScript);\n\n    // Gate request adapter on injecting the extension script.\n    const GPUPrototype = navigator.gpu.__proto__;\n    const originalRequestAdapter = GPUPrototype.requestAdapter;\n\n    GPUPrototype.requestAdapter = async function(options) {\n        await scriptInjected;\n        return await originalRequestAdapter.call(this, options);\n    };\n})();\n    `,Object(o.a)(t),setTimeout(()=>{t.remove()},0)}}]);